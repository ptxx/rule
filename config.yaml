# 节点订阅
proxy-providers:
  亚马逊:
    url: "https://www1st.ga-sub.lat/api/v1/client/subscribe?token=a60b97380db9163953ab7f11249e762f"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 180
    override:
      additional-prefix: "亚马逊"
    proxy: 直连
  赚钱:
    url: "https://dash.pqjc.site/api/v1/client/subscribe?token=b8be0157e153bbdf8f624e26647a3b1c"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 180
    override:
      additional-prefix: "赚钱"
    proxy: 直连
  牛逼:
    url: "https://zhuzhuzhu.whtjdasha.com/api/v1/client/subscribe?token=ec132966eec3444fd21b1421a23df4e9"
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 180
    override:
      additional-prefix: "牛逼"
    proxy: 直连

proxies:
  - {name: 直连, type: direct, udp: true}
  - {name: 拒绝, type: reject}

# DNS 设置
dns:
  enable: true
  listen: 0.0.0.0:7874
  ipv6: true
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  proxy-server-nameserver:
    - 119.29.29.29
    - 223.5.5.5
  fake-ip-filter:
    - +.lan
    - +.local
    - geosite:cn

# TUN 模块
tun:
  enable: true
  stack: mixed
  device: utun
  endpoint-independent-nat: true
  auto-route: true
  auto-detect-interface: true
  auto-redirect: true
  strict-route: false

profile:
  store-selected: true
  store-fake-ip: true

# 默认策略组模板
default: &default
  type: select
  proxies:
    - ♻️ ALL-智选
    - 🌐 ALL-手选
    - 直连
    - 拒绝    
    - 香港-故转
    - 香港-智选
    - 台湾-故转
    - 台湾-智选
    - 美国-故转
    - 美国-智选
    - 狮城-故转
    - 狮城-智选
    - 日韩-故转
    - 日韩-智选
    
proxy-groups:
  - {name: 优先代理, <<: *default}
  - {name: 游戏代理, <<: *default}
  - {name: YouTube, <<: *default}
  - {name: Google, <<: *default}
  - {name: Microsoft, <<: *default}  
  - {name: ChatGPT, <<: *default}
  - {name: GitHub, <<: *default}
  - {name: TikTok, <<: *default}
  - {name: Telegram, <<: *default}
  - {name: Netflix, <<: *default}
  - {name: SteamCN, <<: *default}  
  - {name: 漏网之鱼, <<: *default}

  # 全局组
  - name: 🌐 ALL-手选
    type: select
    include-all: true
    filter: "^((?!(直连|拒绝|剩余|到期|建议每次|如果只|太旧|使用教程|一下客)).)*$"


  - name: ♻️ ALL-智选
    type: smart                      # 智能代理组类型（mihomo / clash.meta 扩展）
    include-all: true
    filter: "^((?!(直连|拒绝|剩余|到期|建议每次|如果只|太旧|使用教程|一下客)).)*$"
    interval: 300                    # 每300秒测速一次（延迟/可用性）
    timeout: 5000                    # 超时上限 5000 毫秒
    tolerance: 50                    # 延迟容差（毫秒），低于此值不会切换
    strategy: sticky-sessions         # 策略：lowest-latency / balanced / most-stable
    check-interval: 300              # 健康检测间隔时间
    probe-type: ping                 # 探测方式：http / tcp / ping
    probe-url: 8.8.8.8
    probe-port: 80                   # HTTP 探测端口
    max-loss: 30                     # 丢包率超过30%视为不可用
    max-jitter: 100                  # 抖动大于100ms 视为不稳定
    switch-threshold: 200            # 当前节点延迟高出平均值200ms自动切换
    weight:                          # 权重调整（部分版本支持）
      亚马逊: 1.3
      牛逼: 0.8
    enable: true                     # 启用该智能组

  # 新加坡组
  - name: 狮城-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 狮城-手选
      - 狮城-智选
  - name: 狮城-手选
    type: select
    include-all: true
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)).*$"
  - name: 狮城-智选
    type: smart
    include-all: true
    policy-priority: ".*牛逼.*:0.8"
    uselightgbm: true
    collectdata: true
    lightgbm-history-size: 150
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 120
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)).*$"

  # 日本组
  - name: 日韩-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 日韩-手选
      - 日韩-智选
  - name: 日韩-手选
    type: select
    include-all: true
    filter: "(?=.*(韩|KR|(?i)tokyo|(?i)Japan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵)).*$"
  - name: 日韩-智选
    type: smart
    include-all: true
    policy-priority: ".*牛逼.*:0.8"
    uselightgbm: true
    collectdata: true
    lightgbm-history-size: 150
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 120
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(韩|KR|(?i)tokyo|(?i)Japan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵)).*$"

  # 香港组
  - name: 香港-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 香港-手选
      - 香港-智选
  - name: 香港-手选
    type: select
    include-all: true
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"
  - name: 香港-智选
    type: smart
    include-all: true
    policy-priority: ".*牛逼.*:0.8"
    uselightgbm: true
    collectdata: true
    lightgbm-history-size: 150
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 120
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"

  # 台湾组
  - name: 台湾-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 台湾-手选
      - 台湾-智选
  - name: 台湾-手选
    type: select
    include-all: true
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"
  - name: 台湾-智选
    type: smart
    include-all: true
    policy-priority: ".*牛逼.*:0.8"
    uselightgbm: true
    collectdata: true
    lightgbm-history-size: 150
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 120
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|🇨🇳|TaiWan|Taiwan)).*$"

  # 美国组
  - name: 美国-故转
    type: fallback
    interval: 180
    lazy: false
    proxies:
      - 美国-手选
      - 美国-智选
  - name: 美国-手选
    type: select
    include-all: true
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|(?i)States|(?i)california|America)).*$"
  - name: 美国-智选
    type: smart
    include-all: true
    policy-priority: ".*牛逼.*:0.8"
    uselightgbm: true
    collectdata: true
    lightgbm-history-size: 150
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 120
      tolerance: 2
    strategy: sticky-sessions
    interval: 180
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|(?i)States|(?i)california|America)).*$"

# 规则和规则集保持不变
rules:
  - RULE-SET,01.优先代理,优先代理
  - RULE-SET,apple_ip,DIRECT,no-resolve
  - RULE-SET,apple_domain,DIRECT
  - RULE-SET,Blizzard_domain,游戏代理
  - RULE-SET,01.游戏代理,游戏代理
  - RULE-SET,ai,ChatGPT
  - RULE-SET,google_ip,Google,no-resolve
  - RULE-SET,youtube_domain,YouTube
  - RULE-SET,google_domain,Google
  - RULE-SET,netflix_ip,Netflix,no-resolve
  - RULE-SET,netflix_domain,Netflix
  - RULE-SET,02.steamCN,SteamCN
  - RULE-SET,github_domain,GitHub
  - RULE-SET,microsoft_domain,Microsoft
  - RULE-SET,tiktok_domain,TikTok
  - RULE-SET,telegram_ip,Telegram,no-resolve
  - RULE-SET,telegram_domain,Telegram
  - RULE-SET,广告,拒绝
  - GEOIP,CN,DIRECT
  - MATCH,漏网之鱼

rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  01.优先代理: {type: file, interval: 86400, behavior: classical, format: yaml, path: "./ruleset/01.优先代理.yaml"}
  01.游戏代理: {type: file, interval: 86400, behavior: classical, format: yaml, path: "./ruleset/01.游戏代理.yaml"}
  02.steamCN: {type: http, interval: 86400, behavior: domain, format: yaml, path: "./ruleset/02.steamCN.yaml", url:  "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/SteamCN/SteamCN.yaml"}
  Blizzard_domain: {<<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Blizzard/Blizzard.list"}
  ai: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs"}
  youtube_domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  microsoft_domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  tiktok_domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  google_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  apple_ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geoip/apple.mrs"}
  广告: {type: http, interval: 86400, behavior: domain, format: yaml, path: "./ruleset/03.reject.yaml", url:  "https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt"}
